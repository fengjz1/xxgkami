version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: xxgkami_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-xxgkami}
      MYSQL_USER: ${MYSQL_USER:-xxgkami_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-xxgkami_pass}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./install/install.sql:/docker-entrypoint-initdb.d/install.sql:ro
    ports:
      - "3306:3306"
    networks:
      - xxgkami_network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # PHP应用服务
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: xxgkami_php
    restart: unless-stopped
    depends_on:
      - mysql
    volumes:
      - ./:/var/www/html
      - php_sessions:/var/lib/php/sessions
    environment:
      - DB_HOST=mysql
      - DB_NAME=${MYSQL_DATABASE:-xxgkami}
      - DB_USER=${MYSQL_USER:-xxgkami_user}
      - DB_PASS=${MYSQL_PASSWORD:-xxgkami_pass}
    networks:
      - xxgkami_network

  # Nginx Web服务器
  nginx:
    image: nginx:alpine
    container_name: xxgkami_nginx
    restart: unless-stopped
    depends_on:
      - php
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - nginx_logs:/var/log/nginx
    networks:
      - xxgkami_network

  # phpMyAdmin (可选，用于数据库管理)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: xxgkami_phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-xxgkami_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-xxgkami_pass}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root123456}
    ports:
      - "8080:80"
    networks:
      - xxgkami_network

volumes:
  mysql_data:
    driver: local
  php_sessions:
    driver: local
  nginx_logs:
    driver: local

networks:
  xxgkami_network:
    driver: bridge
